// Code generated by mockery v1.0.0
package mocks

import (
	"context"
)
import "github.com/stretchr/testify/mock"
import "github.com/user-management-with-go/models"

type Repository struct {
	mock.Mock
}

func (_m *Repository) Fetch(ctx context.Context, num int64) ([]*models.Page,  error) {
	ret := _m.Called(ctx, num)

	var r0 []*models.Page
	if rf, ok := ret.Get(0).(func(context.Context, int64) []*models.Page); ok {
		r0 = rf(ctx, num)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]*models.Page)
		}
	}

	var r2 error
	if rf, ok := ret.Get(2).(func(context.Context, int64) error); ok {
		r2 = rf(ctx, num)
	} else {
		r2 = ret.Error(2)
	}

	return r0, r2
}


func (_m *Repository) Store(ctx context.Context, a *models.Page) error {
	ret := _m.Called(ctx, a)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, *models.Page) error); ok {
		r0 = rf(ctx, a)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}